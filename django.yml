# django
# dns: django-service.k8sdjango.svc.cluster.local
---
apiVersion: v1
kind: Service
metadata:
  name: django-service
  namespace: k8sdjango
spec:
  ports:
  - port: 80
    targetPort: 8000
  selector:
    app: django-pod

# ingress 负载均衡
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: django-ingress
  namespace: k8sdjango
spec:
  rules:
      paths:
        - path: /
          django:
            serviceName: django-service
            servicePort: 80

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: k8sdjango-django
  namespace: k8sdjango
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: django-pod
    spec:
      containers:
        - name: k8sdjango-django
          image: 192.168.124.61:5000/k8sdjango:v1.0   # 你的后端打包的镜像地址（私有）
          imagePullPolicy: Always

          ports:
            - containerPort: 8000
          command: ["/bin/sh"]
          args: ["-c", "python manage.py runserver 0.0.0.0:8000"]

      initContainers:
        - name: wait-redis
          image: busybox
          command: ['sh', '-c', 'until nslookup redis.k8sdjango.svc.cluster.local; do echo waiting for redis service; sleep 2; done;']
        - name: wait-postgresql
          image: busybox
          command: ['sh', '-c', 'until nslookup postgresql.k8sdjango.svc.cluster.local; do echo waiting for postgresql service; sleep 2; done;']

---
apiVersion: batch/v1
kind: Job
metadata:
  name: sync-db
spec:
  template:
    metadata:
      name: sync-db
      labels:
        app: django-sync-db-job
    spec:
      containers:
      - name: django-db-migrate
        image: 140.xx.xx.181:5000/django:v1.0
        command:
        - "/bin/sh"
        - "-c"
        - "python manage.py makemigrations && python manage.py migrate"
